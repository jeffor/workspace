Sphinx.conf 配置文档

一.创建 sphinx.conf 文件

/***************************************
	索引数据设置
***************************************/
	Source 源名称 1{		//索引源配置
	       一些配置
	}

	Index 索引名称 1{
	       Source 源名称 1
	}

	Source 源名称 2{
		一些配置
	}

	Index 索引名称 2{
		Source 源名称 2
	}

	Indexer{

	mem_limit  32M

	}

/***************************************
	搜索基本设置
***************************************/
	Searchd{                             // 配置 searchd 守护程序本身
		...
	}


二.    Source 源名称 相关配置说明

	type                  数据库类型 (Mysql 或 SQL);

	sql_host              数据库主机地址 ( 如果是外网 , 请确保防火墙允许链接 )
	sql_port              数据库端口
	sql_user              数据库用户名
	sql_pass              数据库密码
	sql_db                数据库名称
        sql_sock              Unix套接字名称(该设置是否启用取决于sql_host设置)
        mysql_connect_flags   mysql连接标识(只对mysql数据源有效,默认为0)
				    CLIENT_COMPRESS = 32; can use compression protocol
				    CLIENT_SSL = 2048; switch to SSL after handshake
				    CLIENT_SECURE_CONNECTION = 32768; new 4.1 authentication

	/**mysql ssl 安全认证文件 路径设置*/
	mysql_ssl_cert
        mysql_ssl_key
	mysql_ssl_ca

	odbc_dsn              默认为空, 用于定义数据库连接参数，主要数 数据库名称, 用户名, 密码
				    odbc_dsn = Driver={Oracle ODBC Driver};Dbq=myDBName;Uid=myUsername;Pwd=myPassword

	#########  索引前操作  ###########
	sql_query_pre         索引前操作语句，主要用于设置编码
					sql_query_pre = SET NAMES utf8
					sql_query_pre = SET SESSION query_cache_type=OFF

	#########  索引操作  ###########
	sql_query            索引文本查询语句,主键必须放在第一个位置
        sql_joined_field     用于降低数据苦衷表连接消耗
					sql_joined_field = FIELD-NAME 'from'  ( 'query' | 'payload-query' \
					    | 'ranged-query' ); QUERY [ ; RANGE-QUERY ]
	sql_query_range      迭代范围查询
					sql_query_range = SELECT MIN(id),MAX(id) FROM documents
	sql_range_step       迭代步宽设置
	sql_query_killlist   设置删除id列表

	/**查询属性*/
	sql_attr_bool
	sql_attr_uint
	sql_attr_bint
	sql_attr_timestamp
	sql_attr_float
	sql_attr_string
	sql_attr_multi
	sql_attr_json

	sql_field_string    设置一个field既被索引也被存储

	#########  索引后操作  ###########
        sql_query_post      	在索引操作成功后执行的操作
        sql_query_post_index    在索引操作成功后执行的操作
	sql_ranged_throttle	设置查询睡眠间隔
					sql_ranged_throttle = 1000


三.    Index 中配置说明

	type                   索引类型('plain', 'distributed', 'rt', 'template')
	source                 数据源名称
	path                   索引存放文件路径(不包含扩展名)
	docinfo                属性存储类型('none', 'inline', 'extern')
	mlock                  内存锁(0, 1)
	morphology             定义在索引前对词的形态转换(中文不支持)
	min_word_len           索引的词的最小长度 设为 1 既可以搜索单个字节搜索 , 越小 索引越精确 , 但建立索引花费的时间越长
	charset_type           utf-8/gbk 设置数据编码
	charset_table          字符表和大小写转换规则 . 频繁应用于 sphinx 的分词过程
	min_prefix_len         最小前缀 (0)
	min_infix_len          最小中缀 (1)

	//以下三句是关于UTF-8中文一元分词的配置

	charset_table          0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F
	ngram_len              1
	ngram_chars            U+3000..U+2FA1F

四.    searchd 配置说明

	port                   sphinx 的端口 (9312)
	log                    服务进程日志存放路径，一旦 sphinx 出现异常，基本上可以从这里查询有效信息
	query_log              客户端查询日志 尤为有用 它将在运行时显示每次搜索并显示结果
	read_timeout           请求超时 (5)
	max_children           同时可执行的最大 searchd 进程数 (30)
	pid_file               进程 ID 文件
	max_matches            查询结果的最大返回数
	seamless_rotate        是否支持无缝切换，做增量索引时通常需要 (0/1)

	至此 spninx.conf 配置文件结束 ; 注意 : 如果有换行 必须用反斜杠 \ 链接

五.    sphinx 建立所以 及监听

	切换到 DOS  sphinx/bin 目录下

1.       建立索引

Indexer –c sphinx.conf 索引名称 /--all (--all 参数是建立所有索引 )

完成后提示如下 :

total 535600 docs, 10707632 bytes

total 34.323 sec, 311958 bytes/sec, 15604.27 docs/sec

total 5 reads, 0.282 sec, 45592.6 kb/call avg, 56.4 msec/call avg

total 547 writes, 12.172 sec, 1017.0 kb/call avg, 22.2 msec/call avg

2.       建立完成后

可以执行 search [–c] sphinx.conf 搜索内容 (-c 参数 : 是否允许模糊搜索 )

3.       监听端口

Searchd

运行后 提示

listening on all interfaces, port9312

accepting connections

监听成功后 既可以运行 PHP 程序 进行 搜索

              PHPCODE:

                     require("sphinxapi.php");              // 加载类文件

$clnew SphinxClient();               // 实例化类

$cl->SetServer('localhost',9312);  // 设置服务

$search->setSearch_start(($page -1) * $pageSize);//分页
    $search->setSearch_limit($pageSize * 1);

$cl->SetArrayResult(true);           // 设置 显示结果集方式

$cl->SetLimits(0,10);                   // 同 sql 语句中的 LIMIT

$cl->SetSortMode(“mode”);         // 排序模式 SPH_SORT_ATTR_DESC 和 SPH_SORT_ATTR_ASC

$result$cl->Query('ff',[ 索引名称可选 ]);                 // 执行搜索,索引名称指的是下面例子中的member, member_delta

Var_dump($result);                      // 输出
例子：
source member
{
        type                                     mysql


        sql_host                                 localhost
        sql_user                                 XXX
        sql_pass                                 XXX
        sql_db                                   XXX
        sql_port                                 3306

        sql_query_pre                            SET NAMES utf8
        sql_query_pre                            SET SESSION query_cache_typeOFF

        sql_query                                \
                SELECT members.uid as uid,members.username as username FROM members where member_status 1 and uid not in  \
        (SELECT distinct  user_id FROM `fct_faction_member` )

}

source member_delta : member
{

        sql_query_pre                            SET NAMES utf8
        sql_query_pre                            SET SESSION query_cache_typeOFF

        sql_query                                \
                 SELECT members.uid as uid,members.username as username FROM members where member_status 1 and  uid not in \
         (SELECT  distinct user_id FROM `fct_faction_member` )
}
index member
{
      source                                     member
        path                                     /data0/coreseek/var/data/member_test
        docinfo                                  extern
        charset_dictpath                 /usr/local/webserver/mmseg/etc/
        mlock                                    0
        morphology                               none
        min_word_len                             1
        html_strip                               0
        charset_type                             zh_cn.utf-8
        ngram_len                                0

}


index member_delta
{
        source                                   member_delta
        path                                     /data0/coreseek/var/data/member_delta_test
        docinfo                                  extern
        charset_dictpath                         /usr/local/webserver/mmseg/etc/
        mlock                                    0
        morphology                               none
        min_word_len                             1
        html_strip                               0
        charset_type                             zh_cn.utf-8
        ngram_len                                0
}
sphinx的原理是每天定时的去处理一些大的sql语句，将查询出来的结果放在文件中，在你每次去搜索时是根据条件在文件的基础上去搜索的，这样节省时间！
#注意：member_delta 中的sql_query_pre的个数需和member对应，否则可能搜索不出相应的结果
